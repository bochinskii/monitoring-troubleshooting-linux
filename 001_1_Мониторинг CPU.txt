---
CPU
---

Вот так можно посмотреть LA. LA - очень полезная штука.

$ cat /proc/loadavg
0.04 0.13 0.16 1/431 2346

- 0.04 - за минуту
- 0.13 - за 5 минут
- 0.16 - за 15 минту.

Измеряется от 0 до 1. 1 - это значит, что ОДИН процессор (ядро) обработал все запросы к нему на вычислительные ресурсы от процессов.


Узнать количество ядер

$ cat /proc/cpuinfo | grep "cpu cores" | wc -l
6

или

$  lscpu | grep -e "^CPU(s)"
CPU(s):              6

или

$ nproc
6




Не очень удобный инструмент для мониторинга, но он хорош для использования в скриптах.

$ vmstat
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 2  0      0 792536  58552 504084    0    0    83    52   64   85  0  2 94  4  0

или


Будет выдавать информацию какждые 2 секунды (это можно настраивать)

$ watch vmstat

procs (процессы)
	r, b - колличество потоков ядра занимаемых процессами (running, blocked)
	Если r <= количеству процессоров (ядер), то все - ОК.
	b - это означает что поток (процессоре, ядре) занят процессом, который находится в непрерывном сне (State - D).
	Чаще всего это означает, что данные процессы ждут ответа от системы вводы/вывода (медленный диск или проблемы с ним).
	Реже, но бывает, что такие процессы ждут ответа от ситемы распределения оперативной памяти.

system
	in (interups) - количество прерываний (в секунду), которые поступают от программного или аппаратного обеспечения (пользователь нажал на клавишу и т.д.)
	cs (contecst switches) - количество переключений процессора (в секунду) с одной задачи на другую

cpu
	us (user space) - время (в процентах от всего времени CPU), которое используется для выпролнения кода на уровне пользователя.
	sy (system time) -  время (в процентах от всего времени CPU), которое используется для выпролнения кода на уровне ядра.
	Есть код, который вывполняется на пользовательском уровне (работа с софтом) и на уровне ядра (работа с апаратным обеспечением).
	
	id (idle) - простой процессора (в процентах). Правда он включает в себя и io wait (процент времени, в течении которго процессор ждет ответа от диска).
	wa (IO wait) - время (в процентах), в течении которого процессор ждет ответа от диска.
	Если тут значение от 50% и >, то указывает на проблему с диском, т.е. что-то загружает диск.
	
	st (stolen time) - время (в процентах) "украденное" другими виртуальными машинами.
	




Данный инструмент показывает все тоже самое, что и vmstat (%CPU(s): ).
Более удобный инструмент - htop

$ top
top - 08:56:01 up  1:11,  2 users,  load average: 0.06, 0.31, 0.41
Tasks: 255 total,   1 running, 254 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.3 us,  0.3 sy,  0.0 ni, 99.4 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :   1993.4 total,    381.2 free,    775.1 used,    837.1 buff/cache
MiB Swap:      0.0 total,      0.0 free,      0.0 used.   1033.5 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
  892 Debian-+  20   0 3336672 192440  93828 S   1.3   9.4   1:01.50 gnome-shell
  832 mysql     20   0 3837616 267348  19492 S   1.0  13.1   2:04.69 mysqld
 6480 root      20   0   11288   3892   3140 R   0.7   0.2   0:00.32 top
  253 root      20   0       0      0      0 S   0.3   0.0   0:10.85 jbd2/sda2-8
  720 Debian-+  20   0   34708  14584   9572 S   0.3   0.7   0:08.63 snmpd
 1028 zabbix    20   0  115324  10680   5148 S   0.3   0.5   0:01.96 zabbix_server
 1033 zabbix    20   0  115324  10300   4780 S   0.3   0.5   0:00.30 zabbix_server
...

us, sy - пользовательское и системное выполнение
ni - часть процессорного времени потраченное на обработку процессов с измененным nice (проритетом)
id - простой
wa - процессор ждет IO
hi, si - аппаратные прерывания и программные прерывания

Если нажать на - 1, то top покажет количество информацию по потокам

top - 08:57:16 up  1:12,  2 users,  load average: 0.07, 0.27, 0.39
Tasks: 257 total,   1 running, 256 sleeping,   0 stopped,   0 zombie
%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu1  :  0.6 us,  1.1 sy,  0.0 ni, 98.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu3  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu4  :  0.0 us,  0.6 sy,  0.0 ni, 99.4 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu5  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :   1993.4 total,    376.9 free,    777.3 used,    839.1 buff/cache
MiB Swap:      0.0 total,      0.0 free,      0.0 used.   1031.3 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
  832 mysql     20   0 3837616 269396  19492 S   1.1  13.2   2:06.11 mysqld
 6480 root      20   0   11288   3892   3140 R   1.1   0.2   0:00.64 top
  247 root       0 -20       0      0      0 I   0.6   0.0   0:00.84 kworker/3:1H-kblockd
  779 zabbix    20   0   26392   5760   4464 S   0.6   0.3   0:01.45 zabbix_agentd
  781 zabbix    20   0   26392   5764   4464 S   0.6   0.3   0:01.31 zabbix_agentd
 1043 zabbix    20   0  121808  14508   8716 S   0.6   0.7   0:03.96 zabbix_server
    1 root      20   0  169576  10372   7904 S   0.0   0.5   0:03.99 systemd
...




Очень удобная штука для мониторинга

$ htop






Нагрузить одно ядро (процессор, поток) в течении 20 секунд

$ stress -c 1 -t 20s



Статусы процессов:

- R=Running – процесс находится в очереди на выполнение, то есть либо выполняется в данный момент, либо ожидает выделения ему очередного кванта времени центрального процессора.
- S=Sleeping – процесс находится в состоянии прерываемого ожидания, то есть ожидает какого-то события, сигнала или освобождения нужного ресурса.
- D=Direct – процесс ожидает определенного («прямого») сигнала от аппаратной части и не реагирует на другие сигналы;
- Z=Zombie – это процесс, выполнение которого завершилось, но относящиеся к нему структуры ядра по каким-то причинам не освобождены.
Одной из причин их появления в системе может быть следующая ситуация. Обычно освобождение структур ядра, относящихся к процессу,
выполняет процесс-родитель после получения от потомка сигнала о завершении. Но бывают случаи, когда родительский процесс завершается раньше дочернего.
Процессы, не имеющие родителя, называются "сиротами". "Сироты" автоматически усыновляются процессом init, который и принимает сигналы об их завершении.
Если процесс-родитель или init по каким-то причинам не может принять сигнал о завершении дочернего процесса, то процесс-потомок превращается в "зомби" и получает статус Z.
Процессы-зомби не занимают процессорного времени (т. е. их выполнение прекращается), но соответствующие им структуры ядра не освобождаются.
В некотором смысле это «мертвые» процессы. Уничтожение таких процессов — одна из обязанностей системного администратора. Хочу отметить, что появление данных процессов говорит о том,
что в системе что-то не в порядке, и скорее всего не в порядке с аппаратной частью, так что берем memtest и MHDD и тестим-тестим. Не исключен вариант и кривого кода программы.