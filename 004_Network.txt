-------
Network
-------


Вот отличная комманда, чтобы понять есть ли проблемы сети.

$ ifconfig ens33
ens33: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.1.233  netmask 255.255.255.0  broadcast 192.168.1.255
        inet6 fe80::20c:29ff:fe9a:99d3  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:9a:99:d3  txqueuelen 1000  (Ethernet)
        RX packets 10196  bytes 1041839 (1017.4 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 14051  bytes 1423727 (1.3 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
        device interrupt 19  base 0x2000

Тут, главные значения - errors, dropped, frame, carrier, collisions

frames - это проблемы на канальном уровне.
carrier - проблемы с аналоговой частью т.е. скорее всего с кабелем.
collisions - блоблемы с согласованием half duplex и full duplex

Интересная штука - scoped
	global - выдан публичный ip адрес
	site - для ipv6
	link - локальная сеть (приватные адреса)
	host - адрес виден только данному хосту т.е. lookpback
	
	
	
	
	
	
Очень полезная комманда

Псомотреть tcp (t), udp (u) и все (a) соединения т.е. listing, established и т.д. При эьтом будут выводится номера (n) портов, а не имена.

$ netstat -tuna
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN
tcp        0      0 127.0.0.1:6010          0.0.0.0:*               LISTEN
tcp        0      0 127.0.0.1:6011          0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:445             0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:10051           0.0.0.0:*               LISTEN
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:139             0.0.0.0:*               LISTEN
tcp        0      0 192.168.1.233:55404     64.233.161.102:80       TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41888         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41876         TIME_WAIT
tcp        0      0 192.168.1.233:22        192.168.1.105:60260     ESTABLISHED
tcp        0      0 127.0.0.1:10050         127.0.0.1:41874         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41902         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41944         TIME_WAIT
tcp        0      0 192.168.1.233:22        192.168.1.105:60261     ESTABLISHED
tcp        0      0 127.0.0.1:10050         127.0.0.1:41932         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41942         TIME_WAIT
tcp        0    176 192.168.1.233:22        192.168.1.105:60256     ESTABLISHED
tcp        0      0 127.0.0.1:10050         127.0.0.1:41914         TIME_WAIT
tcp        0      0 192.168.1.233:22        192.168.1.105:60257     ESTABLISHED
tcp        0      0 127.0.0.1:10050         127.0.0.1:41886         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41916         TIME_WAIT
tcp        0      0 127.0.0.1:10050         127.0.0.1:41910         TIME_WAIT
...


Вывести соединения, которые в состоянии listing (l). Так же вывести программу (p), которая слышует на определенном порту.
При этом отсортируем по номеру порта (22)


$ netstat -ltunp | grep 22
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      687/sshd
tcp6       0      0 :::22                   :::*                    LISTEN      687/sshd



Так же полезная комманда

$ iftop -n

└──────────────────────────────────┴──────────────────────────────────┴──────────────────────────────────┴──────────────────────────────────┴───────────────────────────────────
192.168.1.233                                                              => 192.168.1.105                                                              1.81Kb  1.99Kb  1.43Kb
                                                                           <=                                                                             160b    192b    233b
192.168.1.233                                                              => 50.0.11.5                                                                   672b    202b     72b
                                                                           <=                                                                               0b      0b      0b
192.168.1.233                                                              => 50.0.12.11                                                                    0b    202b     72b
                                                                           <=                                                                               0b      0b      0b
192.168.1.233                                                              => 50.0.12.12                                                                    0b    202b     72b
                                                                           <=                                                                               0b      0b      0b
192.168.1.233                                                              => 50.0.12.13                                                                    0b    202b     72b
                                                                           <=                                                                               0b      0b      0b
192.168.1.233                                                              => 50.0.12.14                                                                    0b    202b     72b
                                                                           <=                                                                               0b      0b      0b
224.0.0.251                                                                => 192.168.1.105                                                                 0b      0b      0b
                                                                           <=                                                                               0b     99b     35b
192.168.1.233                                                              => 8.8.8.8                                                                       0b      0b    120b
...




Полезные знания.

Если вы не используете ipv6, то лучше его отключить. Так сеть будет может работать чуток быстрее

$ echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
$ echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6




Замерить скорость интернета можно с помощью speedtest-cli.
Правда, это не очень хороший метод т.к. speedtest будет выбирать по возможности сеть вашего провайдера,
где скорость будет хорошая.
https://github.com/sivel/speedtest-cli






Вот хороший инструмент, чтобы понять где пакеты не проходят или где большая задержка.

$ traceroute yandex.ru
traceroute to yandex.ru (77.88.55.88), 30 hops max, 60 byte packets
 1  dlinkrouter.local (192.168.1.1)  2.209 ms  7.305 ms  7.307 ms
 2  10.255.61.252 (10.255.61.252)  13.299 ms  13.280 ms  13.271 ms
 3  10.255.61.22 (10.255.61.22)  13.227 ms  13.228 ms  13.212 ms
 4  10.255.61.14 (10.255.61.14)  13.145 ms  13.047 ms  13.030 ms
 5  10.250.245.254 (10.250.245.254)  13.051 ms  13.032 ms  14.570 ms
 6  10.249.13.34 (10.249.13.34)  14.568 ms 10.249.12.29 (10.249.12.29)  7.216 ms 10.249.13.34 (10.249.13.34)  4.806 ms
 7  10.249.12.59 (10.249.12.59)  4.655 ms c0-ats22.aaanet.ru (80.80.111.22)  5.511 ms 10.249.12.59 (10.249.12.59)  6.502 ms
 8  kai-cr01-ae23.200.rnd.mts-internet.net (195.34.36.114)  5.132 ms 10.249.13.39 (10.249.13.39)  6.069 ms kai-cr01-ae23.200.rnd.mts-internet.net (195.34.36.114)  5.105 ms
 9  c0-ats22.aaanet.ru (80.80.111.22)  5.461 ms  6.457 ms  6.039 ms
10  kai-cr01-ae23.200.rnd.mts-internet.net (195.34.36.114)  5.075 ms ler-cr03-be2.61.rnd.mts-internet.net (195.34.53.177)  6.015 ms  6.008 ms
11  * ler-cr01-ae6.61.rnd.mts-internet.net (195.34.53.125)  4.619 ms *
12  ler-cr03-be2.61.rnd.mts-internet.net (195.34.53.177)  3.871 ms * *
13  ler-cr01-ae6.61.rnd.mts-internet.net (195.34.53.125)  3.790 ms ler-cr02-ae11.0.rnd.mts-internet.net (195.34.50.214)  3.295 ms ler-cr01-ae6.61.rnd.mts-internet.net (195.34.53.125)  3.631 ms
14  ler-cr02-ae0.16.rnd.mts-internet.net (195.34.50.244)  3.196 ms  4.004 ms  3.882 ms
15  ler-cr02-ae11.0.rnd.mts-internet.net (195.34.50.214)  3.810 ms  3.719 ms  3.631 ms
16  * * *
17  * * *
18  * * m9-cr04-be4.77.msk.mts-internet.net (195.34.53.115)  21.996 ms
19  * * *
20  * 212.188.33.111 (212.188.33.111)  22.632 ms *
21  m9-cr04-be3.77.msk.mts-internet.net (195.34.53.186)  22.126 ms 212.188.33.111 (212.188.33.111)  24.243 ms  22.161 ms
22  212.188.33.111 (212.188.33.111)  36.543 ms  33.195 ms sas-32z1-ae1.yndx.net (87.250.239.177)  31.287 ms
23  yandex.ru (77.88.55.88)  25.226 ms  25.147 ms *


По-умолчанию эта утилита использует протокол icmp, но можно поробовать и другие

TCP
$ traceroute -T yandex.ru
UDP
$ traceroute -T yandex.ru








Такая же утилита как и tracerout, но показывает в динамике
$ mtr yandex.ru
zab2 (192.168.1.233)                                                                                                                                   2022-07-10T14:36:53+0300
Keys:  Help   Display mode   Restart statistics   Order of fields   quit
                                                                                                                                       Packets               Pings
 Host                                                                                                                                Loss%   Snt   Last   Avg  Best  Wrst StDev
 1. dlinkrouter.local                                                                                                                 0.0%     3    1.3  22.6   1.3  65.2  36.9
 2. 10.255.61.252                                                                                                                     0.0%     3    2.8   3.8   2.8   5.3   1.3
 3. 10.255.61.22                                                                                                                      0.0%     3    8.1   4.3   2.2   8.1   3.3
 4. 10.255.61.14                                                                                                                     50.0%     3    6.5   6.5   6.5   6.5   0.0
 5. 10.250.245.250                                                                                                                    0.0%     3    7.2   9.1   7.2  10.8   1.8
 6. 10.249.13.34                                                                                                                      0.0%     3    4.0  52.4   4.0 148.7  83.3
 7. 10.249.12.59                                                                                                                      0.0%     3   12.5  22.6  12.5  35.7  11.9
 8. 10.249.13.37                                                                                                                     50.0%     3    8.5   8.5   8.5   8.5   0.0
 9. 195.34.36.115                                                                                                                     0.0%     3    3.9   3.9   3.1   4.7   0.8
10. kai-cr01-ae23.200.rnd.mts-internet.net                                                                                            0.0%     3    7.7  53.4   7.7 140.5  75.4
11. ???
12. ler-cr03-be2.61.rnd.mts-internet.net                                                                                             50.0%     3    3.0   3.0   3.0   3.0   0.0
13. ler-cr01-ae6.61.rnd.mts-internet.net                                                                                              0.0%     3    4.0   8.3   3.7  17.3   7.8
14. ler-cr02-ae0.16.rnd.mts-internet.net                                                                                              0.0%     3    2.8  44.5   2.8 127.6  71.9
15. ler-cr02-ae13.0.rnd.mts-internet.net                                                                                              0.0%     3    7.5  13.4   7.5  24.4   9.5
16. ???
17. ???
18. ???
19. ???
20. ???
21. m9-cr04-be3.77.msk.mts-internet.net                                                                                               0.0%     3   22.4  75.4  22.4 165.3  78.3
22. 212.188.33.111                                                                                                                    0.0%     2   22.8  42.3  22.8  61.9  27.7
23. vla-32z3-ae2.yndx.net                                                                                                             0.0%     2   27.4  27.1  26.8  27.4   0.4
24. ???
25. yandex.ru                                                                                                                         0.0%     2   24.8  88.1  24.8 151.3  89.4

Не смотря на то, что в столбике - Loss (потерянные пакеты) у нас есть 50% на некоторых марщшрутизаторах, все работает нормально.
Об этом можно сделать вывод из-за того, что дальше потерь нет. Откуда тогда потери на некоторых маршрутизаторах? Это, скорее всего, 
связано с тем, что обратные пакеты от этих маршрутизаторов идут по другому маршруту и наша система не понимает от кого они пришли.

Last - время последнего пакета, за котрое он прошол всю эту цепочку.
Avg - среднее время
Best - лучшее время
Wrst - худшее время

StDev - показывает разброс значений Last, Avg, Best, Wrst.
Если это значение большое, то пакеты проходят то быстро, то медленно. Это может говорить о том, что определенный маршрутизатор нагружен.

В нашем случае проблем нет.


Вот как можно применять данную утилиту.
Мы говорим, чтобы он отправил 10 пакетов (c) на порт 80 (P). При этом интервал между запросами 0.2 секунды. Чтобы делал широкий (w) отчет (r)

# mtr -P 80 -i 0.2 -rwc 10 yandex.ru
Start: 2022-07-10T14:44:36+0300
HOST: zab2                                   Loss%   Snt   Last   Avg  Best  Wrst StDev
  1.|-- dlinkrouter.local                      10.0%    10    2.0   1.8   1.2   2.7   0.4
  2.|-- 10.255.61.252                           0.0%    10    3.2   5.2   2.8   9.9   2.7
  3.|-- 10.255.61.22                            0.0%    10    2.5   8.9   2.4  36.9  11.6
  4.|-- 10.255.61.14                           40.0%    10    3.2   3.8   2.4   8.3   2.3
  5.|-- 10.250.245.254                          0.0%    10    3.8   4.7   3.6   8.0   1.3
  6.|-- 10.249.12.29                            0.0%    10    5.5   6.0   3.7   7.8   1.3
  7.|-- 195.34.36.115                           0.0%    10    4.0   6.6   3.2  16.9   4.9
  8.|-- kai-cr01-ae23.200.rnd.mts-internet.net  0.0%    10    9.1   4.8   2.8   9.1   2.1
  9.|-- kai-cr02-ae4.61.rnd.mts-internet.net   90.0%    10  3189. 3189. 3189. 3189.   0.0
 10.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 11.|-- ler-cr01-ae6.61.rnd.mts-internet.net    0.0%    10    4.0   5.2   3.1  10.7   2.4
 12.|-- ler-cr02-ae0.16.rnd.mts-internet.net    0.0%    10    2.9   5.4   2.9  17.1   4.4
 13.|-- ler-cr02-ae11.0.rnd.mts-internet.net    0.0%    10    3.0   4.5   2.9  10.7   2.4
 14.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 15.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 16.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 17.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 18.|-- m9-cr04-be4.77.msk.mts-internet.net     0.0%    10   22.3  24.4  22.2  30.1   2.9
 19.|-- 212.188.33.111                          0.0%    10   24.8  31.3  22.3  53.6  10.2
 20.|-- vla-32z3-ae1.yndx.net                   0.0%    10   33.2  29.8  25.2  42.8   5.5
 21.|-- ???                                    100.0    10    0.0   0.0   0.0   0.0   0.0
 22.|-- yandex.ru                               0.0%    10   25.1  25.1  24.1  26.6   0.9






Утилита iperf

У нас есть сервер - А (192.168.1.101) и сервер - Б(192.168.1.102).
Мы хотим замерить скорость от сервера А, до Б.

На Б запускаем как сервер

$ iperf -s 

На сервере А запускаем как клиент и указываем ip адрес сервера Б и указываем размер данных, который мы отправим на сервера Б.

$ iperf -c 192.168.1.102 -n 500M

или можно указать время (в секундах) выполнения теста. При этом iperf будет пытаться за это время отослать как можно больше данных.

$ iperf -c 192.168.1.102 -t 5


Так же можно замерить наобород т.е. сказать сервера А, чтобы он запросил данные с сервера Б

$ iperf -c 192.168.1.102 -R -n 500M

