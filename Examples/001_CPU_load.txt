------------
1. CPU Load
-----------

На скриншоте - 001_1_CPU_load.png и 001_2_CPU_load.png видно, что у нас происходит загрузка нашего процессора, причем всех
ядер под 100%.

Так же видно, что загружает наш CPU пользовательское пространство (us), а не системное (sy).

Сортируем по CPU (по-умолчанию) и видим, этого пользователя, который запустил stress.

Далее, зная PIDs злорадных процессов, мы можем выяснить более детально комманду (stress --cpu 6 --timeout 300s) и родительский процесс (15603).
Для примера взяли только один PID.

$ ps -ef | grep 15604
denys    15604 15603 99 15:40 pts/2    00:02:29 stress --cpu 6 --timeout 300s
root     15716 15485  0 15:43 pts/3    00:00:00 grep 15604

Если нужно, то посмореть родительский процесс

$ ps -ef | grep 15603

denys    15603  2702  0 15:40 pts/2    00:00:00 stress --cpu 6 --timeout 300s
denys    15604 15603 99 15:40 pts/2    00:04:54 stress --cpu 6 --timeout 300s
denys    15605 15603 98 15:40 pts/2    00:04:53 stress --cpu 6 --timeout 300s
denys    15606 15603 98 15:40 pts/2    00:04:52 stress --cpu 6 --timeout 300s
denys    15607 15603 98 15:40 pts/2    00:04:54 stress --cpu 6 --timeout 300s
denys    15608 15603 98 15:40 pts/2    00:04:53 stress --cpu 6 --timeout 300s
denys    15609 15603 98 15:40 pts/2    00:04:53 stress --cpu 6 --timeout 300s
root     15814 15485  0 15:45 pts/3    00:00:00 grep 15603

и так далее, отследить всю цепочку процессов.

$ ps -ef | grep 2702
denys     2702  2700  0 10:40 pts/2    00:00:00 -bash
root     15851 15485  0 15:46 pts/3    00:00:00 grep 2702

$ ps -ef | grep 2700
denys     2700  2693  0 10:40 ?        00:00:00 sshd: denys@pts/2
denys     2702  2700  0 10:40 pts/2    00:00:00 -bash
root     15862 15485  0 15:46 pts/3    00:00:00 grep 2700

...


На скриншоте 001_3_CPU_load.png показано как это выглядит в htop. Намного лучше. Тут видна сразу полная комманда.
Если включь дерево (F5), то можно просмотреть всю цепочку процессов - 001_4_CPU_load.png.
Вообщем htop удобней.



Кому интересно, нагрузили систему мы вот так

$ stress --cpu 6 --timeout 300s